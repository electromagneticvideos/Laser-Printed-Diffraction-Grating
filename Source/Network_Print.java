/* 
 
Description.
 
This Program takes a (HP PCL or other) file containing the raw printer language and 
sends it to the network port of a printer. 

This is intended to be used with files generated by the accompanying Generate_Diffraction_Grating
application to send files created by that program to   the network port of a printer. 
 
License

COPYRIGHT: This software and other files are copyright © 2024 by Peter Jones.

TERMS OF USE: You are free to download, use and modify this software and associated 
files subject to these conditions:

    If you use it or a diffraction (or similar) grating made with it in any public performance, 
    document, or writing, you must give credit by reasonably indicating to your audience it 
    came from YouTube channel @ElectromagneticVideos and if possible provide the link to the 
    applicable video https://youtu.be/WwQXQrm33JM in someplace like a text description where 
    they can click on it.

    If you make changes to fix or improve the software, and wish to distribute those changes, 
    it must include this license. You must also upload the improved software to this 
    repository (https://github.com/electromagneticvideos/Laser-Printed-Diffraction-Grating) so 
    others can benefit.

    Warranty: There is no warranty. This software and associated files are provided without support of any kind.

    Exclusion of Liability. The author accepts no liability whatsoever for any use this 
    software or associated files.

If you do not accept any or all of these terms, or if they are not allowed in or made invalid 
by law in any regions that may apply to you or your use of it, you may not download or use 
this software or associated files.

If there is an issue with this license for you intended use, please contact electromagneticvideos [at] gmail.com
 
 
 
 */ 
import java.io.BufferedOutputStream;
 
import java.io.IOException;
import java.net.Socket;
 
import java.nio.file.Files;
import java.nio.file.Paths;
 
  
public class Network_Print 
{

	static String version = "1.00" ;
	 
	static byte[] bytes = null;
	
	public static void main(String[] args) 
	{
		
		int number_of_args = args.length;
		String filename = null;
		String printer_ip = null;
		
		if (number_of_args<1)
		{
			System.out.println("Error: Use this program as follows: java -jar Network_Print.jar filename printers_IP_number");
			System.out.println("                           Example: java -jar Network_Print.jar diffraction_grating.prn 192.168.1.245");
			System.exit(-1);
		}
		
		if (number_of_args==2)
		{
			filename = args[0];
			printer_ip = args[1];
		}
		
		if (number_of_args==1)
		{
			filename = "diffraction_grating.prn";
			printer_ip = args[0];
		}
		 
		System.out.println("File \""+filename+"\"");
		System.out.println("Printer IP Number \""+printer_ip+"\"");
		
		
	    //get file data*/

		try 
		{
			 
			 bytes = Files.readAllBytes(Paths.get(filename));
			 
			 
		} catch (IOException e) 
		{
			  System.out.println("Error: Could not open file \""+filename+"\"");
			  System.exit(-1);
		}		
		
		//Send to printer */
		
		 int  raw_jetdirect_appsocket_port = 9100;
		 try 
		 {
		        Socket socket = new Socket(printer_ip, raw_jetdirect_appsocket_port);
		        BufferedOutputStream out   =  new BufferedOutputStream(socket.getOutputStream(), 32768) ;   
				out.write(bytes);
		        out.flush();
		        out.close();
		        socket.close();
		  }
		  catch (IOException e)
		  {
			  System.out.println("Error sending to printer");
			  e.printStackTrace();
			  System.exit(-1);
		  }
		 System.out.println("Finished sending to printer");
		
	}
		
		
		
		
		 
}
